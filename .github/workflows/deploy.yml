name: Deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    environment: staging
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build application
      run: npm run build
      env:
        VITE_SUPABASE_URL: ${{ secrets.STAGING_SUPABASE_URL }}
        VITE_SUPABASE_ANON_KEY: ${{ secrets.STAGING_SUPABASE_ANON_KEY }}
        NODE_ENV: staging
    
    - name: Deploy to Vercel (Staging)
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        vercel-args: '--prod'
        alias-domains: |
          staging-ibpi.vercel.app
    
    - name: Run smoke tests
      run: |
        npm run test:e2e -- --grep "@smoke"
      env:
        PLAYWRIGHT_BASE_URL: https://staging-ibpi.vercel.app
        TEST_USER_EMAIL: ${{ secrets.STAGING_TEST_USER_EMAIL }}
        TEST_USER_PASSWORD: ${{ secrets.STAGING_TEST_USER_PASSWORD }}

  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: deploy-staging
    environment: production
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build application
      run: npm run build
      env:
        VITE_SUPABASE_URL: ${{ secrets.PROD_SUPABASE_URL }}
        VITE_SUPABASE_ANON_KEY: ${{ secrets.PROD_SUPABASE_ANON_KEY }}
        NODE_ENV: production
    
    - name: Deploy to Vercel (Production)
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        vercel-args: '--prod'
        alias-domains: |
          ibpi.vercel.app
          www.ibpi.com
    
    - name: Notify deployment
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        text: 'Production deployment completed!'
        webhook_url: ${{ secrets.SLACK_WEBHOOK }}
      if: always()

  rollback:
    name: Rollback Production
    runs-on: ubuntu-latest
    environment: production
    if: failure()
    needs: deploy-production
    
    steps:
    - name: Rollback Vercel deployment
      run: |
        curl -X POST https://api.vercel.com/v6/deployments/${{ env.DEPLOYMENT_ID }}/rollback \
          -H "Authorization: Bearer ${{ secrets.VERCEL_TOKEN }}" \
          -H "Content-Type: application/json"
    
    - name: Notify rollback
      uses: 8398a7/action-slack@v3
      with:
        status: 'failure'
        text: 'Production deployment failed! Rolled back to previous version.'
        webhook_url: ${{ secrets.SLACK_WEBHOOK }}